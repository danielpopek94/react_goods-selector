{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleSelectClick","element","setState","handleClearClick","this","className","type","onClick","map","good","isSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,iBAAmB,WACjB,EAAKD,SAAS,CAAEH,aAAc,MAVlC,4CAaE,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGN,EAAY,UAAMA,EAAN,gBAAmC,oBAG/CA,GAEC,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,sBAKpB,uBAAOE,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAACC,GACV,IAAMC,EAAaD,IAASV,EAE5B,OACE,qBACE,UAAQ,OACRM,UAAWK,EAAa,+BAAiC,GAF3D,UAKE,6BACGX,IAAiBU,EAEd,wBACE,UAAQ,eACRH,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKJ,iBAJhB,eAUA,wBACE,UAAQ,YACRG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKP,kBAAkBS,IAJxC,iBAWN,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGI,MA3BEA,iBA1CvB,GAAyBE,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5ffc2761.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleSelectClick = (element: string) => {\n    this.setState({ selectedGood: element });\n  };\n\n  handleClearClick = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {selectedGood ? `${selectedGood} is selected` : 'No goods selected'}\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {selectedGood\n            && (\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.handleClearClick}\n            />\n            )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const isSelected = good === selectedGood;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  className={isSelected ? 'has-background-success-light' : ''}\n                  key={good}\n                >\n                  <td>\n                    {selectedGood === good\n                      ? (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={this.handleClearClick}\n                        >\n                          -\n                        </button>\n                      )\n                      : (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => this.handleSelectClick(good)}\n                        >\n                          +\n                        </button>\n                      )}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}